{"version":3,"sources":["library/header/index.js","components/home/components/carousel/index.js","config/index.js","library/dataset/components/metadata-panel/index.js","library/dataset/helpers/mapping/contact.js","library/dataset/helpers/mapping/summary.js","library/dataset/helpers/mapping/spatial-info.js","library/dataset/helpers/mapping/reference.js","library/dataset/helpers/mapping/identification.js","library/dataset/helpers/mapping/distributor.js","library/dataset/helpers/mapping/online-resources.js","library/dataset/helpers/mapping-metadata.js","library/dataset/index.js","helpers/find-dataset-maxextent.js","components/pencarian/index.js","components/home/components/dataset-terbaru/index.js","components/home/components/kategori/index.js","components/home/components/instansi/index.js","components/home/components/link-carousel/index.js","components/home/components/berita/index.js","library/footer/index.js","helpers/use-media.js","helpers/fetchSettings.js","helpers/fetchBerita.js","helpers/fetchDataset.js","helpers/fetchKategori.js","helpers/fetchInstansi.js","helpers/fetchBanners.js","components/home/helpers/fetchWeb.js","components/home/index.js","components/jelajah/index.js","components/pencarian/components/carousel/index.js","components/pencarian/components/kategori/index.js","components/pencarian/components/instansi/index.js","components/pencarian/components/list-dataset/index.js","components/pencarian/helpers/add-count-instansi.js","components/pencarian/helpers/add-count-kategori.js","components/pencarian/components/pagination/index.js","components/pencarian/helpers/filter-dataset.js","components/berita/index.js","serviceWorker.js","index.js"],"names":["Header","_ref","_ref$organization","organization","_ref$logo","logo","_useState","useState","_useState2","Object","slicedToArray","isNavActive","setNavActive","headerClassName","react_default","a","createElement","className","Link","to","src","alt","concat","onClick","NavLink","exact","activeClassName","href","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplaySpeed","autoplay","Carousel","_ref$images","images","lib_default","map","image","index","key","style","backgroundImage","host","config","api","wms","MetadataPanel","title","_ref$data","data","item","value","contact","rawMetadata","base","get","summary","spatialInfo","reference","identification","distributor","onlineResources","mappingMetadata","toConsumableArray","Modal","setAppElement","filterMaxExtent","filter","Dataset","kategori","author","identifier","downloadable","bbox","isMetadataOpen","setIsMetadataOpen","_useState3","_useState4","isMapOpen","setIsMapOpen","_useState5","_useState6","metadata","setMetadata","_useState7","_useState8","mapBounds","setMapBounds","getMetadata","fetch","then","res","json","openMap","downloadIcon","mapProps","bounds","zoomControl","center","zoom","id","react_modal_lib_default","isOpen","onRequestClose","Map","TileLayer","url","WMSTileLayer","layers","transparent","format","ZoomControl","position","metadata_panel_MetadataPanel","assign","e","preventDefault","DatasetTerbaru","PropagateLoader_default","sizeUnit","size","color","loading","length","src_library_dataset","Kategori","history","label","push","link","window","scrollTo","Instansi","isSmall","isMedium","numItems","rows","arrows","scroll","LinkCarousel","Berita","clickHandler","date","content","Footer","_ref$dataSettings","dataSettings","email","phone","fax","address","tentangkami","useMedia","query","matchMedia","matches","setMatches","useEffect","media","listener","addListener","removeListener","isFetching","storedData","fetchSettings","setDataSettings","city","postalcode","administrativearea","country","join","pageTitle","document","fetchBerita","setData","slice","judul","tanggal","stripped","full","isiberita","regExp","fetchDataset","attemp2","exec","split","x1","x2","keywords","replace","workspace","parseFloat","fetchKategori","fetchInstansi","dataInstansi","setDataInstansi","name","fetchBanners","dataBanner","setDataBanner","image_1","image_2","image_3","image_4","tagline","remark_1","fetchWeb","nama","findMaxExtent","dataset","extent","advancedFilter","Home","_ref2","keyword","setKeyword","datasetTerbaru","dataKategori","dataWeb","dataBerita","isAdvanceActive","setAdvanceActive","onMoveend","curBounds","target","getBounds","south","getSouth","west","getWest","east","getEast","north","getNorth","onChangeMap","searchClassName","selectColorStyles","control","styles","objectSpread","borderRadius","height","backgroundColor","mapHeight","handleSearchSubmit","params","queryString","stringify","library_header","carousel_Carousel","dispatchEvent","Event","react_select_esm","placeholder","options","onChange","instansi","type","onKeyPress","dataset_terbaru_DatasetTerbaru","kategori_Kategori","instansi_Instansi","link_carousel_LinkCarousel","berita_Berita","footer_Footer","Jelajah","innerHeight","setHeight","handleResize","addEventListener","removeEventListener","attribution","clickFilter","Array","isArray","kategoriFilterForClick","kat","count","instansiFilterForClick","ins","ListDataset","dataset_Dataset","finalDataInstansi","addCountInstansi","dataDataset","counts","curInstansi","finalDataKategori","addCountKategori","curKategori","Pagination","datasetLength","currentPage","paginateNext","paginatePrev","filterNext","page","parseInt","filterPrev","filterDataset","indexOf","toLowerCase","includes","curMapBounds","latLngBounds","itemBounds","intersects","Pencarian","location","parse","search","filterMapProps","filterBoundsX1","filterBoundsX2","nextFilter","filteredDataset","paginatedDataset","startPage","splice","paginateDataset","components_carousel_Carousel","components_kategori_Kategori","components_instansi_Instansi","display","getElementById","focus","list_dataset_ListDataset","pagination_Pagination","match","detailBerita","dangerouslySetInnerHTML","__html","Boolean","hostname","ReactDOM","render","BrowserRouter","Route","path","component","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e334f93.chunk.js","sourcesContent":["import React, { useState  } from 'react';\nimport { Link, NavLink } from \"react-router-dom\";\nimport './index.scss';\n\nconst Header = ({\n  organization = '',\n  logo = ''\n}) => {\n  const [isNavActive, setNavActive] = useState(false);\n  let headerClassName = 'header';\n  if (isNavActive) {\n    headerClassName = 'header header-active';\n  }\n\n  return (\n    <div className={headerClassName}>\n      <div className=\"container\">\n        <div className=\"header__logo\">\n          <Link to={`/`}><img src={logo} alt=\"\" /></Link>\n          <h1><Link to={`/`}>{`Geoportal ${organization}`}</Link></h1>\n          <div\n            className=\"header__nav-handle\"\n            onClick={() => setNavActive(!isNavActive)}\n          >\n            <span className=\"icon-list\" />\n          </div>\n        </div>\n        <div className=\"header__nav\">\n          <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\n          <a href=\"/jelajah/\">Jelajah</a>\n          <NavLink activeClassName=\"active\" to=\"/pencarian/\">Pencarian</NavLink>\n          <a href=\"/gspalapa/\">Login</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Slider from \"react-slick\";\n\nimport './index.css';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst settings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  autoplaySpeed: 2000,\n  autoplay: true,\n};\n\nexport const Carousel = ({images = []}) => (\n  <div className=\"carousel\">\n    <Slider {...settings}>\n      {images.map((image, index) => (\n        <div key={`carousel-${index}`}>\n          <div className=\"carousel__image\" style={{ backgroundImage: 'url(\"' + image + '\")' }} />\n        </div>\n      ))}\n    </Slider>\n  </div>\n);\n\nexport default Carousel;\n","const host = 'http://REPGSMANAGERDOM';\n\nexport const config = {\n  host: `${host}/`,\n  api: `${host}/api`,\n  wms: `${host}/geoserver/wms?`,\n};\nexport default config;\n","import React from 'react';\nimport './index.scss';\n\nexport const MetadataPanel = ({\n  title,\n  data = []\n}) => {\n  return (\n    <div className=\"metadata-panel\">\n      <h2 className=\"metadata-panel__title\">{title}</h2>\n      <div className=\"metadata-panel__content\">\n      {data.map(item => (\n        <div className=\"metadata-panel__item\" key={item.title}>\n          <div className=\"metadata-panel__item-title\">{item.title}</div>\n          <div className=\"metadata-panel__item-value\">{item.value}</div>\n        </div>\n      ))}\n      </div>\n    </div>\n  )\n};\n\n","import get from 'lodash/get';\n\nexport const contact = (rawMetadata) => {\n  const base = 'csw:GetRecordByIdResponse.gmd:MD_Metadata.gmd:contact.gmd:CI_ResponsibleParty.';\n  return {\n    title: 'Contact',\n    data: [\n      {\n        title: 'Individual Name',\n        value: get(rawMetadata, `${base}gmd:individualName.gco:CharacterString`)\n      },\n      {\n        title: 'Organisation Name',\n        value: get(rawMetadata, `${base}gmd:organisationName.gco:CharacterString`)\n      },\n      {\n        title: 'Position Name',\n        value: get(rawMetadata, `${base}gmd:positionName.gco:CharacterString`)\n      },\n      {\n        title: 'Phone',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:phone.gmd:CI_Telephone.gmd:voice.gco:CharacterString`)\n      },\n      {\n        title: 'Fax',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:phone.gmd:CI_Telephone.gmd:facsimile.gco:CharacterString`)\n      },\n      {\n        title: 'Delivery Point',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:deliveryPoint.gco:CharacterString`)\n      },\n      {\n        title: 'City',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:city.gco:CharacterString`)\n      },\n      {\n        title: 'Administrative Area',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:administrativeArea.gco:CharacterString`)\n      },\n      {\n        title: 'Postal Code',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:postalCode.gco:CharacterString`)\n      },\n      {\n        title: 'Country',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:country.gco:CharacterString`)\n      },\n      {\n        title: 'Email',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:electronicMailAddress.gco:CharacterString`)\n      },\n      {\n        title: 'Online Resources',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:onlineResource.gmd:CI_OnlineResource.gmd:linkage.gmd:URL`)\n      },\n      {\n        title: 'Hours of Services',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:hoursOfService.gco:CharacterString`)\n      },\n      {\n        title: 'Contact Instructions',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:contactInstructions.gco:CharacterString`)\n      },\n    ],\n  };\n};\n\nexport default contact;\n\n","import get from 'lodash/get';\n\nexport const summary = (rawMetadata) => {\n  const base = 'csw:GetRecordByIdResponse.gmd:MD_Metadata.';\n  return {\n    title: 'Metadata',\n    data: [\n      {\n        title: 'File Identifier',\n        value: get(rawMetadata, `${base}gmd:fileIdentifier.gco:CharacterString`)\n      },\n      {\n        title: 'Language',\n        value: get(rawMetadata, `${base}gmd:language.gmd:LanguageCode.#text`)\n      },\n      {\n        title: 'Character Set',\n        value: get(rawMetadata, `${base}gmd:characterSet.gmd:MD_CharacterSetCode.#text`)\n      },\n      {\n        title: 'Hierarchy Level',\n        value: get(rawMetadata, `${base}gmd:hierarchyLevel.gmd:MD_ScopeCode.#text`)\n      },\n      {\n        title: 'Date',\n        value: get(rawMetadata, `${base}gmd:dateStamp.gco:DateTime`)\n      },\n      {\n        title: 'Metadata Standard Name',\n        value: get(rawMetadata, `${base}gmd:metadataStandardName.gco:CharacterString`)\n      },\n      {\n        title: 'Metadata Standard Version',\n        value: get(rawMetadata, `${base}gmd:metadataStandardVersion.gco:CharacterString`)\n      },\n      {\n        title: 'Dataset URI',\n        value: get(rawMetadata, `${base}gmd:dataSetURI.gco:CharacterString`)\n      },\n      {\n        title: 'Maintenance Frequency',\n        value: get(rawMetadata, `${base}gmd:metadataMaintenance.gmd:MD_MaintenanceInformation.gmd:maintenanceAndUpdateFrequency.gmd:MD_MaintenanceFrequencyCode.#text`)\n      },\n      {\n        title: 'Maintenance Note',\n        value: get(rawMetadata, `${base}gmd:metadataMaintenance.gmd:MD_MaintenanceInformation.gmd:maintenanceNote.gco:CharacterString`)\n      },\n      {\n        title: 'Constraints',\n        value: get(rawMetadata, `${base}gmd:metadataConstraints.gmd:MD_SecurityConstraints.gmd:userNote.gco:CharacterString`)\n      },\n    ]\n  };\n};\n\nexport default summary;\n\n","import get from 'lodash/get';\n\nexport const spatialInfo = (rawMetadata) => {\n  const base = 'csw:GetRecordByIdResponse.gmd:MD_Metadata.gmd:spatialRepresentationInfo.gmd:MD_VectorSpatialRepresentation.';\n  return {\n    title: 'Spatial Representation Info',\n    data: [\n      {\n        title: 'Topologi Level',\n        value: get(rawMetadata, `${base}gmd:topologyLevel.gmd:MD_TopologyLevelCode.#text`)\n      },\n      {\n        title: 'Geometric Objects',\n        value: get(rawMetadata, `${base}gmd:geometricObjects.gmd:MD_GeometricObjects.gmd:geometricObjectType.gmd:MD_GeometricObjectTypeCode.#text`)\n      },\n    ],\n  };\n};\n\nexport default spatialInfo;\n\n","import get from 'lodash/get';\n\nexport const reference = (rawMetadata) => {\n  const base = 'csw:GetRecordByIdResponse.gmd:MD_Metadata.gmd:referenceSystemInfo.gmd:MD_ReferenceSystem.gmd:referenceSystemIdentifier.gmd:RS_Identifier.';\n  return {\n    title: 'Reference System Info Identifier',\n    data: [\n      {\n        title: 'Code',\n        value: get(rawMetadata, `${base}gmd:code.gco:CharacterString`)\n      },\n      {\n        title: 'Version',\n        value: get(rawMetadata, `${base}gmd:version.gco:CharacterString`)\n      },\n      {\n        title: 'Authority',\n        value: get(rawMetadata, `${base}gmd:authority.gmd:CI_Citation.gmd:title.gco:CharacterString`)\n      },\n      {\n        title: 'Authority Resource',\n        value: get(rawMetadata, `${base}gmd:authority.gmd:CI_Citation.gmd:citedResponsibleParty.gmd:CI_ResponsibleParty.gmd:contactInfo.gmd:CI_Contact.gmd:onlineResource.gmd:CI_OnlineResource.gmd:linkage.gmd:URL`)\n      },\n    ],\n  };\n};\n\nexport default reference;\n\n","import get from 'lodash/get';\n\nexport const identification = (rawMetadata) => {\n  const base = 'csw:GetRecordByIdResponse.gmd:MD_Metadata.gmd:identificationInfo.gmd:MD_DataIdentification.';\n  return {\n    title: 'Data Identification',\n    data: [\n      {\n        title: 'Title',\n        value: get(rawMetadata, `${base}gmd:citation.gmd:CI_Citation.gmd:title.gco:CharacterString`)\n      },\n      {\n        title: 'Date',\n        value: get(rawMetadata, `${base}gmd:citation.gmd:CI_Citation.gmd:date.gmd:CI_Date.gmd:date.gco:DateTime`)\n      },\n      {\n        title: 'Abstract',\n        value: get(rawMetadata, `${base}gmd:abstract.gco:CharacterString`)\n      },\n      {\n        title: 'Maintenance Frequency',\n        value: get(rawMetadata, `${base}gmd:resourceMaintenance.gmd:MD_MaintenanceInformation.gmd:maintenanceAndUpdateFrequency.gmd:MD_MaintenanceFrequencyCode.#text`)\n      },\n      {\n        title: 'Keywords',\n        value: get(rawMetadata, `${base}gmd:descriptiveKeywords.gmd:MD_Keywords.gmd:keyword.gco:CharacterString`)\n      },\n      {\n        title: 'Resource Constraints',\n        value: get(rawMetadata, `${base}gmd:resourceConstraints.gmd:MD_LegalConstraints.gmd:accessConstraints.gmd:MD_RestrictionCode.#text`)\n      },\n      {\n        title: 'Spatial Representation Type',\n        value: get(rawMetadata, `${base}gmd:spatialRepresentationType.gmd:MD_SpatialRepresentationTypeCode.#text`)\n      },\n      {\n        title: 'Language',\n        value: get(rawMetadata, `${base}gmd:language.gmd:LanguageCode.#text`)\n      },\n      {\n        title: 'Character Set',\n        value: get(rawMetadata, `${base}gmd:characterSet.gmd:MD_CharacterSetCode.#text`)\n      },\n      {\n        title: 'Topic Category',\n        value: get(rawMetadata, `${base}gmd:topicCategory.gmd:MD_TopicCategoryCode`)\n      },\n      {\n        title: 'West Bound Longitude',\n        value: get(rawMetadata, `${base}gmd:extent.gmd:EX_Extent.gmd:geographicElement.gmd:EX_GeographicBoundingBox.gmd:westBoundLongitude.gco:Decimal`)\n      },\n      {\n        title: 'East Bound Longitude',\n        value: get(rawMetadata, `${base}gmd:extent.gmd:EX_Extent.gmd:geographicElement.gmd:EX_GeographicBoundingBox.gmd:eastBoundLongitude.gco:Decimal`)\n      },\n      {\n        title: 'South Bound Latitude',\n        value: get(rawMetadata, `${base}gmd:extent.gmd:EX_Extent.gmd:geographicElement.gmd:EX_GeographicBoundingBox.gmd:southBoundLatitude.gco:Decimal`)\n      },\n      {\n        title: 'North Bound Latitude',\n        value: get(rawMetadata, `${base}gmd:extent.gmd:EX_Extent.gmd:geographicElement.gmd:EX_GeographicBoundingBox.gmd:northBoundLatitude.gco:Decimal`)\n      },\n    ],\n  };\n};\n\nexport default identification;\n\n","import get from 'lodash/get';\n\nexport const distributor = (rawMetadata) => {\n  const base = 'csw:GetRecordByIdResponse.gmd:MD_Metadata.gmd:distributionInfo.gmd:MD_Distribution.gmd:distributor.gmd:MD_Distributor.gmd:distributorContact.gmd:CI_ResponsibleParty.';\n  return {\n    title: 'Distributor',\n    data: [\n      {\n        title: 'Individual Name',\n        value: get(rawMetadata, `${base}gmd:individualName.gco:CharacterString`)\n      },\n      {\n        title: 'Organisation Name',\n        value: get(rawMetadata, `${base}gmd:organisationName.gco:CharacterString`)\n      },\n      {\n        title: 'Position Name',\n        value: get(rawMetadata, `${base}gmd:positionName.gco:CharacterString`)\n      },\n      {\n        title: 'Phone',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:phone.gmd:CI_Telephone.gmd:voice.gco:CharacterString`)\n      },\n      {\n        title: 'Fax',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:phone.gmd:CI_Telephone.gmd:facsimile.gco:CharacterString`)\n      },\n      {\n        title: 'Delivery Point',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:deliveryPoint.gco:CharacterString`)\n      },\n      {\n        title: 'City',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:city.gco:CharacterString`)\n      },\n      {\n        title: 'Administrative Area',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:administrativeArea.gco:CharacterString`)\n      },\n      {\n        title: 'Postal Code',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:postalCode.gco:CharacterString`)\n      },\n      {\n        title: 'Country',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:country.gco:CharacterString`)\n      },\n      {\n        title: 'Email',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:address.gmd:CI_Address.gmd:electronicMailAddress.gco:CharacterString`)\n      },\n      {\n        title: 'Online Resources',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:onlineResource.gmd:CI_OnlineResource.gmd:linkage.gmd:URL`)\n      },\n      {\n        title: 'Hours of Services',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:hoursOfService.gco:CharacterString`)\n      },\n      {\n        title: 'Contact Instructions',\n        value: get(rawMetadata, `${base}gmd:contactInfo.gmd:CI_Contact.gmd:contactInstructions.gco:CharacterString`)\n      },\n    ],\n  };\n};\n\nexport default distributor;\n\n","import get from 'lodash/get';\n\nexport const onlineResources = (rawMetadata) => {\n  const base = 'csw:GetRecordByIdResponse.gmd:MD_Metadata.gmd:distributionInfo.gmd:MD_Distribution.gmd:transferOptions.gmd:MD_DigitalTransferOptions.gmd:onLine';\n  const resources = get(rawMetadata, base);\n  return resources.map((item) => {\n    return {\n      title: 'Transfer Option: ' + get(item, 'gmd:CI_OnlineResource.gmd:description.gco:CharacterString'),\n      data: [\n        {\n          title: 'Name',\n          value: get(item, `gmd:CI_OnlineResource.gmd:name.gco:CharacterString`)\n        },\n        {\n          title: 'Protocol',\n          value: get(item, `gmd:CI_OnlineResource.gmd:protocol.gco:CharacterString`)\n        },\n        {\n          title: 'URL',\n          value: get(item, `gmd:CI_OnlineResource.gmd:linkage.gmd:URL`)\n        },\n      ],\n    };\n  });\n};\n\nexport default onlineResources;\n\n","import { contact } from './mapping/contact.js';\nimport { summary } from './mapping/summary.js';\nimport { spatialInfo } from './mapping/spatial-info.js';\nimport { reference } from './mapping/reference.js';\nimport { identification } from './mapping/identification.js';\nimport { distributor } from './mapping/distributor.js';\nimport { onlineResources } from './mapping/online-resources.js';\n\nexport const mappingMetadata = (rawMetadata) => {\n  return [\n    summary(rawMetadata),\n    identification(rawMetadata),\n    spatialInfo(rawMetadata),\n    reference(rawMetadata),\n    ...onlineResources(rawMetadata),\n    contact(rawMetadata),\n    distributor(rawMetadata),\n  ];\n};\n\nexport default mappingMetadata;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Map, TileLayer, WMSTileLayer, ZoomControl } from 'react-leaflet';\nimport { Link } from \"react-router-dom\";\nimport config from '../../config';\nimport './index.scss';\nimport { MetadataPanel } from './components/metadata-panel';\nimport { mappingMetadata } from './helpers/mapping-metadata';\n\nModal.setAppElement('#root');\n\nexport const Dataset = ({\n  title,\n  kategori,\n  author,\n  image,\n  identifier,\n  downloadable,\n  bbox\n}) => {\n  const defaultMapCenter = [ -6.175985, 106.827313 ];\n  const [isMetadataOpen, setIsMetadataOpen] = useState(false);\n  const [isMapOpen, setIsMapOpen] = useState(false);\n  const [metadata, setMetadata] = useState([]);\n  const [mapBounds, setMapBounds] = useState(null);\n\n  const getMetadata = () => {\n    fetch(`${config.host}/csw?service=CSW&version=2.0.2&request=GetRecordById&ElementSetName=full&Id=${identifier}&outputSchema=http://www.isotc211.org/2005/gmd&outputFormat=application/json`)\n      .then(res => res.json())\n      .then(json => {\n        const metadata = mappingMetadata(json);\n        setMetadata(metadata);\n        setIsMetadataOpen(true);\n      });\n  };\n\n  const openMap = () => {\n    setMapBounds(bbox);\n    setIsMapOpen(true);\n  };\n\n  let downloadIcon = null;\n  if (downloadable === 'Y') {\n    downloadIcon = (\n      <a\n        href={`${config.api}/download_shape?layer=${identifier}`}\n        className=\"dataset__actions-download\"\n      >\n        <span className=\"icon-cloud-download\" />\n      </a>\n    );\n  }\n\n  let mapProps = {};\n  if (!mapBounds) {\n    mapProps = {\n      center: defaultMapCenter,\n      zoom: 12,\n      zoomControl: false,\n    };\n  } else {\n    mapProps = {\n      bounds: mapBounds,\n      zoomControl: false,\n    };\n  }\n  return (\n    <div id={`dataset-${identifier}`}>\n      <Modal\n        isOpen={isMapOpen}\n        onRequestClose={() => setIsMapOpen(false)}\n      >\n        <div className=\"dataset__map\">\n          <div className=\"dataset__map__header\">\n            <h3 className=\"dataset__map__title\">{title}</h3>\n            <span className=\"dataset__map__close\" onClick={() => setIsMapOpen(false)}>\n              <span className=\"icon-close\" />\n            </span>\n          </div>\n          <Map {...mapProps}>\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <WMSTileLayer\n              layers={identifier}\n              url={config.wms}\n              transparent\n              format=\"image/png\"\n            />\n            <ZoomControl position=\"topleft\" />\n          </Map>\n        </div>\n      </Modal>\n      <Modal\n        isOpen={isMetadataOpen}\n        onRequestClose={() => setIsMetadataOpen(false)}\n      >\n        <div className=\"dataset__metadata__header\">\n          <h3 className=\"dataset__metadata__title\">{title}</h3>\n          <span className=\"dataset__metadata__close\" onClick={() => setIsMetadataOpen(false)}>\n            <span className=\"icon-close\" />\n          </span>\n        </div>\n        <div className=\"dataset__metadata__content\">\n          {metadata.map((item, key) => <MetadataPanel key={key} {...item} />)}\n        </div>\n      </Modal>\n      <div className=\"dataset\">\n        <div className=\"dataset__actions\">\n          <a\n            href=\"#map\"\n            className=\"dataset__actions-map\"\n            onClick={(e) => {\n              e.preventDefault();\n              openMap();\n            }}\n          >\n            <span className=\"icon-map\" />\n          </a>\n          <a\n            href=\"#info\"\n            className=\"dataset__actions-info\"\n            onClick={(e) => {\n              e.preventDefault();\n              getMetadata();\n            }}\n          >\n            <span className=\"icon-info\" />\n          </a>\n          {downloadIcon}\n        </div>\n        <div\n          className=\"dataset__image-wrapper\"\n          onClick={(e) => {\n            e.preventDefault();\n            openMap();\n          }}\n        >\n          <span className=\"dataset__image-aligner\" />\n          <img className=\"dataset__image\" src={image} alt=\"\" />\n        </div>\n\n        <Link className=\"dataset__kategori\" to={`/pencarian?kategori=${kategori}`}>{kategori}</Link>\n        <div className=\"dataset__title-wrapper\">\n          <a\n            href=\"#info\"\n            className=\"dataset__title\"\n            onClick={(e) => {\n              e.preventDefault();\n              getMetadata();\n            }}\n          >\n            {title}\n          </a>\n        </div>\n        <Link className=\"dataset__author\" to={`/pencarian?instansi=${author}`}>{author}</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Dataset;\n","let filterMaxExtent;\n\nexport const findMaxExtent = (dataset) => {\n  if (dataset === null) return null;\n  if (filterMaxExtent) return filterMaxExtent;\n  let extent;\n  dataset.map((item) => {\n    if (!extent) {\n      extent = item.bbox;\n    } else {\n      if (item.bbox[0][0] < extent[0][0]) {\n        extent[0][0] = item.bbox[0][0];\n      }\n      if (item.bbox[0][1] < extent[0][1]) {\n        extent[0][1] = item.bbox[0][1];\n      }\n      if (item.bbox[1][0] > extent[1][0]) {\n        extent[1][0] = item.bbox[1][0];\n      }\n      if (item.bbox[1][1] > extent[1][1]) {\n        extent[1][1] = item.bbox[1][1];\n      }\n    }\n    return item;\n  });\n  filterMaxExtent = extent;\n  return extent;\n};\n\nexport default findMaxExtent;\n","import React, { useState } from 'react';\nimport { Map, TileLayer, ZoomControl } from 'react-leaflet';\nimport queryString from 'query-string';\nimport Header from '../../library/header';\nimport { Carousel } from './components/carousel';\nimport { Kategori } from './components/kategori';\nimport { Instansi } from './components/instansi';\nimport { ListDataset } from './components/list-dataset';\nimport { Footer } from '../../library/footer';\nimport { useMedia } from '../../helpers/use-media';\nimport { fetchSettings } from '../../helpers/fetchSettings';\nimport { fetchBanners } from '../../helpers/fetchBanners';\nimport { fetchKategori } from '../../helpers/fetchKategori';\nimport { fetchInstansi } from '../../helpers/fetchInstansi';\nimport { fetchDataset } from '../../helpers/fetchDataset';\nimport { addCountInstansi } from './helpers/add-count-instansi';\nimport { addCountKategori } from './helpers/add-count-kategori';\nimport { Pagination, paginateDataset } from './components/pagination';\nimport { findMaxExtent } from '../../helpers/find-dataset-maxextent';\nimport { filterDataset } from './helpers/filter-dataset';\nimport './index.scss';\n\nlet filter;\n\nconst onChangeMap = ({e,  history}) => {\n  const map = e.target;\n  const curBounds =  map.getBounds();\n  const south = curBounds.getSouth();\n  const west = curBounds.getWest();\n  const east = curBounds.getEast();\n  const north = curBounds.getNorth();\n  const nextFilter = {\n    ...filter,\n    bounds: [[south, west], [north, east]]\n  };\n  history.push(`/pencarian?${queryString.stringify(nextFilter)}`);\n};\n\nconst Pencarian = ({ location, history }) => {\n  filter = queryString.parse(location.search);\n  const currentPage = filter.page || 1;\n  delete filter.page;\n  const [ keyword, setKeyword ] = useState(filter.keyword);\n  const dataSettings = fetchSettings();\n  const dataBanner = fetchBanners();\n  const dataInstansi = fetchInstansi();\n  const dataKategori = fetchKategori();\n  const dataDataset = fetchDataset();\n\n  const finalDataKategori = addCountKategori(dataKategori, dataDataset);\n  const finalDataInstansi = addCountInstansi(dataInstansi, dataDataset);\n\n  let mapBounds = findMaxExtent(dataDataset);\n  let filterMapProps;\n  let map = null;\n  if (mapBounds) {\n    if (filter.bounds) {\n      const filterBoundsX1 = filter.bounds[0].split(',');\n      const filterBoundsX2 = filter.bounds[1].split(',');\n      mapBounds = [\n        [parseFloat(filterBoundsX1[0]), parseFloat(filterBoundsX1[1])],\n        [parseFloat(filterBoundsX2[0]), parseFloat(filterBoundsX2[1])]\n      ];\n    }\n    filterMapProps = {\n      bounds: mapBounds,\n      zoomControl: false\n    };\n\n    map = (\n      <Map\n        {...filterMapProps}\n        onMoveend={(e) => onChangeMap({e, history})}\n      >\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n        <ZoomControl position=\"topleft\" />\n      </Map>\n    );\n  }\n\n  let filteredDataset = filterDataset({\n    dataset: dataDataset,\n    filter,\n    mapBounds\n  });\n\n  let datasetLength = (filteredDataset) ? filteredDataset.length : 0;\n\n  const paginatedDataset = paginateDataset({\n    dataset: filteredDataset,\n    page: currentPage\n  });\n\n  const isSmall = useMedia(\"(max-width: 760px)\");\n  const isMedium = useMedia(\"(min-width: 760px) and (max-width : 1160px)\");\n  let className = '';\n  if (isSmall) {\n    className = 'layout-small';\n  } else if (isMedium) {\n    className = 'layout-medium';\n  }\n\n  return (\n    <div className={className}>\n      <Header\n        logo={dataSettings.logo}\n        organization={dataSettings.organization}\n      />\n      <div className=\"pencarian\">\n        <div className=\"pencarian__banner\">\n          <Carousel images={dataBanner.images} />\n          <div className=\"pencarian__banner__overlay\">\n            <div className=\"container\">\n              <h2>Pencarian Data</h2>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"pencarian__filter\">\n            <h3>Filter Pencarian</h3>\n            <div className=\"pencarian__panel\">\n              <h4>Batas Pencarian</h4>\n              <div className=\"pencarian__peta\">\n                {map}\n              </div>\n              <Kategori data={finalDataKategori} filter={filter} history={history} />\n              <Instansi data={finalDataInstansi} filter={filter} history={history} />\n            </div>\n          </div>\n          <div className=\"pencarian__content\">\n            <div className=\"pencarian__input-wrapper\">\n              <a\n                href=\"#submit-search\"\n                className=\"pencarian__submit\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  const nextFilter = { ...filter, keyword };\n                  const query = queryString.stringify(nextFilter);\n                  history.push(`/pencarian?${query}`);\n                }}\n              >\n                <span className=\"icon-magnifier\" />\n              </a>\n              <span\n                className=\"pencarian__clear\"\n                style={{\n                  display: (keyword && keyword.length > 0) ? 'block' : 'none'\n                }}\n                onClick={() => {\n                  setKeyword('');\n                  document.getElementById('pencarian__input').focus();\n                }}\n              >\n                <span className=\"icon-close\" />\n              </span>\n              <input\n                id=\"pencarian__input\"\n                type=\"text\"\n                placeholder=\"Kata Kunci\"\n                className=\"pencarian__input\"\n                value={keyword}\n                onChange={e => setKeyword(e.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                    const nextFilter = { ...filter, keyword };\n                    const query = queryString.stringify(nextFilter);\n                    history.push(`/pencarian?${query}`);\n                  }\n                }}\n              />\n            </div>\n            <div className=\"pencarian__dataset__list\">\n              <ListDataset data={paginatedDataset} />\n            </div>\n            <Pagination\n              datasetLength={datasetLength}\n              currentPage={currentPage}\n              filter={filter}\n              history={history}\n            />\n          </div>\n        </div>\n        <Footer dataSettings={dataSettings} />\n      </div>\n    </div>\n  );\n};\n\nexport default Pencarian;\n","import React from 'react';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport Dataset from '../../../../library/dataset';\nimport './index.scss';\n\nexport const DatasetTerbaru = ({ data }) => {\n  if (data === null) {\n    return (\n      <div className=\"dataset-terbaru\">\n        <div className=\"dataset-terbaru__loading\">\n          <PropagateLoader\n            className=\"dataset-terbaru__loading\"\n            sizeUnit={\"px\"}\n            size={10}\n            color={'#e87171'}\n            loading={true}\n          />\n        </div>\n      </div>\n    );\n  }\n  if (data.length < 1) return null;\n  return (\n    <div className=\"dataset-terbaru\">\n      <div className=\"container dataset-terbaru__wrapper\">\n        <h2 className=\"dataset-terbaru__header\">\n          <span className=\"dataset-terbaru__header__line\" />\n          Dataset Terbaru\n        </h2>\n        <div className=\"dataset-terbaru__list\">\n          {data.map((item) => (\n            <div key={item.identifier} className=\"dataset-terbaru__list__item\">\n              <Dataset {...item} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DatasetTerbaru;\n","import React from 'react';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport './index.scss';\n\nexport const Kategori = ({ data, history }) => {\n  if (data === null) {\n    return (\n      <div className=\"kategori \">\n        <div className=\"kategori__loading\">\n          <PropagateLoader\n            sizeUnit={\"px\"}\n            size={10}\n            color={'#fff'}\n            loading={true}\n          />\n        </div>\n      </div>\n    );\n  }\n  if (data.length < 1) return null;\n  return (\n    <div className=\"kategori\">\n      <div className=\"container kategori__wrapper\">\n        <h2 className=\"kategori__header\">\n          <span className=\"kategori__header__line\" />\n          Kategori\n        </h2>\n        <div className=\"kategori__item-list\">\n          {data.map((item) => (\n            <div key={item.label} className=\"kategori__item-wrapper\">\n              <a\n                className=\"kategori__item\"\n                href=\"#kategori\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  history.push(item.link);\n                  window.scrollTo(0, 0);\n                }}\n              >\n                <span className=\"kategori__item__logo\">\n                  <img className=\"kategori__item__image\" src={item.image} alt=\"\" />\n                </span>\n                <span className=\"kategori__item__label\">{item.label}</span>\n              </a>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Kategori;\n","import React from 'react';\nimport Slider from \"react-slick\";\nimport PropagateLoader from 'react-spinners/PropagateLoader';\n\nimport './index.scss';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nexport const Instansi = ({\n  title,\n  data,\n  isSmall,\n  isMedium,\n  history\n}) => {\n  if (data === null) {\n    return (\n      <div className=\"instansi\">\n        <div className=\"instansi__loading\">\n          <PropagateLoader\n            sizeUnit={\"px\"}\n            size={10}\n            color={'#e87171'}\n            loading={true}\n          />\n        </div>\n      </div>\n    );\n  }\n  if (data.length < 1) return null;\n\n  let numItems = 6;\n  if (isSmall) numItems = 3;\n  if (isMedium) numItems = 5;\n\n  const settings = {\n    dots: true,\n    infinite: (data.length > numItems) ? true : false,\n    speed: 500,\n    slidesToShow: numItems,\n    slidesToScroll: numItems,\n    rows: 1,\n    autoplaySpeed: 2000,\n    autoplay: true,\n    arrows: false,\n  };\n  return (\n    <div className=\"instansi\">\n      <div className=\"container instansi__wrapper\">\n        <h2 className=\"instansi__header\">\n          <span className=\"instansi__header__line\" />\n          Instansi\n        </h2>\n        <Slider {...settings}>\n          {data.map((item, index) => (\n            <div key={`carousel-${title}-${index}`} className=\"instansi__item-wrapper\">\n              <a\n                className=\"instansi__item\"\n                href=\"#instansi\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  history.push(item.url);\n                  window.scroll(0, 0);\n                }}\n              >\n                <span className=\"instansi__item__logo\">\n                  <span className=\"instansi__item__image-aligner\" />\n                  <img className=\"instansi__item__image\" src={item.image} alt=\"\" />\n                </span>\n                <span className=\"instansi__item__label\">{item.label}</span>\n              </a>\n            </div>\n          ))}\n        </Slider>\n      </div>\n    </div>\n  );\n};\n\nexport default Instansi;\n","import React from 'react';\nimport Slider from \"react-slick\";\nimport PropagateLoader from 'react-spinners/PropagateLoader';\n\nimport './index.scss';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nexport const LinkCarousel = ({\n  title,\n  data,\n  isSmall,\n  isMedium\n}) => {\n  if (data === null) {\n    return (\n      <div className=\"link-carousel\">\n        <div className=\"link-carousel__loading\">\n          <PropagateLoader\n            sizeUnit={\"px\"}\n            size={10}\n            color={'#e87171'}\n            loading={true}\n          />\n        </div>\n      </div>\n    );\n  }\n  if (data.length < 1) return null;\n\n  let numItems = 5;\n  if (isSmall) numItems = 2;\n  if (isMedium) numItems = 5;\n\n  const settings = {\n    dots: true,\n    infinite: (data.length > numItems) ? true : false,\n    speed: 500,\n    slidesToShow: numItems,\n    slidesToScroll: numItems,\n    rows: 1,\n    autoplaySpeed: 2000,\n    autoplay: true,\n    arrows: false,\n  };\n  return (\n    <div className=\"link-carousel\">\n      <div className=\"container link-carousel__wrapper\">\n        <h2 className=\"link-carousel__header\">\n          <span className=\"link-carousel__header__line\" />\n          {title}\n        </h2>\n        <Slider {...settings}>\n          {data.map((item, index) => (\n            <div key={`carousel-${title}-${index}`} className=\"link-carousel__item-wrapper\">\n              <a\n                className=\"link-carousel__item\"\n                href={item.url}\n                title={item.label}\n              >\n                <span className=\"link-carousel__item__logo\">\n                  <span className=\"link-carousel__item__image-aligner\" />\n                  <img className=\"link-carousel__item__image\" src={item.image} alt=\"\" />\n                </span>\n              </a>\n            </div>\n          ))}\n        </Slider>\n      </div>\n    </div>\n  );\n};\n\nexport default LinkCarousel;\n","import React from 'react';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport './index.scss';\n\nexport const Berita = ({ data, clickHandler }) => {\n  if (data === null) {\n    return (\n      <div className=\"berita\">\n        <div className=\"berita__loading\">\n          <PropagateLoader\n            sizeUnit={\"px\"}\n            size={10}\n            color={'#e87171'}\n            loading={true}\n          />\n        </div>\n      </div>\n    );\n  }\n  if (data.length < 1) return null;\n  return (\n    <div className=\"berita\">\n      <div className=\"container\">\n        <h2 className=\"berita__header\">\n          <span className=\"berita__header__line\" />\n          Berita Geoportal\n        </h2>\n        <div className=\"berita__items\">\n          <div className=\"berita__items__wrapper\">\n            {data.map((item, index) => (\n              <div key={`berita-${index}`} className=\"berita__item\">\n                <h4 className=\"berita__item__tanggal\">{item.date}</h4>\n                <h3\n                  className=\"berita__item__title\"\n                  onClick={() => {\n                    clickHandler(item.id);\n                    window.scrollTo(0, 0);\n                    return false;\n                  }}\n                >\n                  {item.title}\n                </h3>\n                <p>{item.content}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Berita;\n","import React from 'react';\nimport './index.scss';\n\nexport const Footer = ({ dataSettings = {}}) => {\n  let email = null;\n  let phone = null;\n  let fax = null;\n  if (dataSettings.email) {\n    email = <p>Email: {dataSettings.email}</p>\n  }\n  if (dataSettings.phone) {\n    phone = <p>Telp: {dataSettings.phone}</p>\n  }\n  if (dataSettings.fax) {\n    fax = <p>Cax: {dataSettings.fax}</p>\n  }\n  return (\n    <div className=\"footer\">\n      <div className=\"container\">\n        <div className=\"footer__didukung\">\n          <h3 className=\"footer__header\">Didukung Oleh</h3>\n          <div className=\"footer__logo\">\n            <a className=\"footer__logo__item\" href=\"/\">\n              <img src=\"/assets/images/logo-big.png\" alt=\"BIG\" />\n            </a>\n            <a className=\"footer__logo__item\" href=\"/\">\n              <img src={dataSettings.logo} alt=\"\" />\n            </a>\n          </div>\n        </div>\n        <div className=\"footer__kontak\">\n          <h3 className=\"footer__header\">Kontak Kami</h3>\n          <p>\n            {dataSettings.organization}<br />\n            {dataSettings.address}\n          </p>\n          {email}\n          {phone}\n          {fax}\n        </div>\n        <div className=\"footer__tentang\">\n          <h3 className=\"footer__header\">Tentang Kami</h3>\n          <p>{dataSettings.tentangkami}</p>\n \t  <p>Palapa V.3.4</p>\n          <p>&copy; 2019 Badan Informasi Geospasial All rights reserved.</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import { useState, useEffect } from 'react';\n\nexport const useMedia = (query) => {\n  const [matches, setMatches] = useState(window.matchMedia(query).matches);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => setMatches(media.matches);\n    media.addListener(listener);\n    return () => media.removeListener(listener);\n  }, [query]);\n\n  return matches;\n};\n\nexport default useMedia;\n\n","import { useState } from 'react';\nimport config from '../config';\n\nlet isFetching = false;\nlet storedData = {};\nexport const fetchSettings = () => {\n  const [dataSettings, setDataSettings] = useState(storedData);\n  if (!isFetching) {\n    isFetching = true;\n    fetch(`${config.api}/sisteminfo`)\n      .then(res => res.json())\n      .then(json => {\n        storedData = {\n          organization: json.organization,\n          logo: json.logo,\n          tentangkami: json.tentangkami,\n          address: [\n            json.address,\n            json.city,\n            json.postalcode,\n            json.administrativearea,\n            json.country\n          ].join(', '),\n          email: json.email,\n          phone: json.phone,\n          fax: json.fax\n        };\n        const pageTitle = `Geoportal ${json.organization}`;\n        document.title = pageTitle;\n        setDataSettings(storedData);\n      });\n  }\n  return dataSettings;\n};\n\nexport default fetchSettings;\n","import { useState } from 'react';\nimport config from '../config';\n\nlet isFetching = false;\nlet storedData = null;\nexport const fetchBerita = () => {\n  const [data, setData] = useState(storedData);\n  if (!isFetching) {\n    isFetching = true;\n    fetch(`${config.api}/berita/list`)\n      .then(res => res.json())\n      .then(json => {\n        let data = [];\n        const recentData = json.slice(0, 3);\n        recentData.map((item) => {\n          data.push({\n            id: item.id,\n            title: item.judul,\n            date: item.tanggal,\n            content: item.stripped || '',\n            full: item.isiberita || '',\n          });\n          return true;\n        });\n        storedData = data;\n        setData(data);\n      });\n  }\n  return data;\n};\n\nexport default fetchBerita;\n","import { useState } from 'react';\nimport config from '../config';\n\nlet isFetching = false;\nlet storedData = null;\nconst regExp = /\\(([^)]+)\\)/;\n\nexport const fetchDataset = () => {\n  const [data, setData] = useState(storedData);\n  if (!isFetching) {\n    isFetching = true;\n    fetch(`${config.api}/listmetalayer`)\n      .then(res => res.json())\n      .then(json => {\n        let data = [];\n        json.map((item) => {\n          const attemp1 = regExp.exec(item.bbox);\n          const attemp2 = attemp1[1].split(',');\n          const x1 = attemp2[0].split(' ');\n          const x2 = attemp2[1].split(' ');\n\n          data.push({\n            identifier: item.identifier,\n            title: item.title,\n            downloadable: item.downloadable,\n            kategori: item.keywords,\n            image: `${config.host}/gsassets/thumbnails/` + item.identifier.replace(/:/,'-') + '.png',\n            author: item.workspace,\n            bbox: [\n              [\n                parseFloat(x1[1]),\n                parseFloat(x1[0]),\n              ],\n              [\n                parseFloat(x2[1]),\n                parseFloat(x2[0])\n              ]\n            ],\n          });\n          return true;\n        });\n        storedData = data;\n        setData(data);\n      });\n  }\n  return data;\n};\n\nexport default fetchDataset;\n","import { useState } from 'react';\nimport config from '../config';\n\nlet isFetching = false;\nlet storedData = null;\nexport const fetchKategori = () => {\n  const [data, setData] = useState(storedData);\n  if (!isFetching) {\n    isFetching = true;\n    fetch(`${config.api}/jumlahdataset`)\n      .then(res => res.json())\n      .then(json => {\n        let data = [];\n        json.map((item) => {\n          data.push({\n            link: `/pencarian?kategori=${item.keywords}`,\n            label: item.keywords,\n            value: item.keywords,\n            image: item.logo\n          });\n          return true;\n        });\n        storedData = data;\n        setData(data);\n      });\n  }\n  return data;\n};\n\nexport default fetchKategori;\n","import { useState } from 'react';\nimport config from '../config';\n\nlet isFetching = false;\nlet storedData = null;\nexport const fetchInstansi = () => {\n  const [dataInstansi, setDataInstansi] = useState(storedData);\n  if (!isFetching) {\n    isFetching = true;\n    fetch(`${config.api}/group/listl`)\n      .then(res => res.json())\n      .then(json => {\n        let data = [];\n        json.map((item) => {\n          data.push({\n            label: item.name,\n            value: item.name,\n            image: item.logo,\n            url: `/pencarian?instansi=${item.name}`\n          });\n          return true;\n        });\n        storedData = data;\n        setDataInstansi(data);\n      });\n  }\n  return dataInstansi;\n};\n\nexport default fetchInstansi;\n","import { useState } from 'react';\nimport config from '../config';\n\nlet isFetching = false;\nlet storedData = {};\nexport const fetchBanners = () => {\n  const [dataBanner, setDataBanner] = useState(storedData);\n  if (!isFetching) {\n    isFetching = true;\n    fetch(`${config.api}/frontend`)\n      .then(res => res.json())\n      .then(json => {\n        let images = [];\n        if (json[0].image_1) images.push(json[0].image_1);\n        if (json[0].image_2) images.push(json[0].image_2);\n        if (json[0].image_3) images.push(json[0].image_3);\n        if (json[0].image_4) images.push(json[0].image_4);\n        storedData = {\n          tagline: json[0].remark_1,\n          images\n        };\n        setDataBanner(storedData);\n      });\n  }\n  return dataBanner;\n};\n\nexport default fetchBanners;\n","import { useState } from 'react';\nimport config from '../../../config';\n\nlet isFetching = false;\nlet storedData = null;\nexport const fetchWeb = () => {\n  const [data, setData] = useState(storedData);\n  if (!isFetching) {\n    isFetching = true;\n    fetch(`${config.api}/linkweb/list`)\n      .then(res => res.json())\n      .then(json => {\n        let data = [];\n        json.map((item) => {\n          data.push({\n            label: item.nama,\n            image: item.image,\n            url: item.url\n          });\n          return true;\n        });\n        storedData = data;\n        setData(data);\n      });\n  }\n  return data;\n};\n\nexport default fetchWeb;\n","import React, { useState } from 'react';\nimport {\n  Map,\n  TileLayer,\n  ZoomControl,\n  // Rectangle,\n} from 'react-leaflet';\nimport queryString from 'query-string';\nimport Select from 'react-select';\n\nimport Header from '../../library/header';\n\nimport { Carousel } from './components/carousel';\nimport { DatasetTerbaru } from './components/dataset-terbaru';\nimport { Kategori } from './components/kategori';\nimport { Instansi } from './components/instansi';\nimport { LinkCarousel } from './components/link-carousel';\nimport { Berita } from './components/berita';\nimport { Footer } from '../../library/footer';\nimport './index.scss';\nimport 'simple-line-icons/css/simple-line-icons.css'\nimport { useMedia } from '../../helpers/use-media';\nimport { fetchSettings } from '../../helpers/fetchSettings';\nimport { fetchBerita } from '../../helpers/fetchBerita';\nimport { fetchDataset } from '../../helpers/fetchDataset';\nimport { fetchKategori } from '../../helpers/fetchKategori';\nimport { fetchInstansi } from '../../helpers/fetchInstansi';\nimport { fetchBanners } from '../../helpers/fetchBanners';\nimport { fetchWeb } from './helpers/fetchWeb';\nimport { findMaxExtent } from '../../helpers/find-dataset-maxextent';\n\nlet advancedFilter = {};\n\nconst onChangeMap = ({e,  history}) => {\n  const map = e.target;\n  const curBounds =  map.getBounds();\n  const south = curBounds.getSouth();\n  const west = curBounds.getWest();\n  const east = curBounds.getEast();\n  const north = curBounds.getNorth();\n  advancedFilter.bounds = [[south, west], [north, east]]\n};\nexport const Home = ({ history }) => {\n  const [ keyword, setKeyword ] = useState('');\n  const dataSettings = fetchSettings();\n  const dataBanner = fetchBanners();\n  const dataset = fetchDataset();\n  const datasetTerbaru = (dataset === null) ? null : dataset.slice(0, 4);\n  const dataKategori = fetchKategori();\n  const dataInstansi = fetchInstansi();\n  const dataWeb = fetchWeb();\n  const dataBerita = fetchBerita();\n\n  const [isAdvanceActive, setAdvanceActive] = useState(false);\n\n  let mapBounds = findMaxExtent(dataset);\n  let map = null;\n  if (mapBounds && isAdvanceActive && map == null) {\n        // <Rectangle bounds={mapBounds} color=\"red\" />\n    map = (\n      <Map\n        bounds={mapBounds}\n        zoomControl={false}\n        onMoveend={(e) => onChangeMap({e, history})}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <ZoomControl position=\"topleft\" />\n      </Map>\n    );\n  }\n\n  const isSmall = useMedia(\"(max-width: 760px)\");\n  const isMedium = useMedia(\"(min-width: 760px) and (max-width : 1160px)\");\n  let searchClassName = 'search';\n  if (isAdvanceActive) {\n    searchClassName = 'search search-active';\n  }\n\n  const selectColorStyles = {\n    control: styles => ({ ...styles,\n      borderRadius: 0,\n      height: isSmall ? 40 : 60,\n      backgroundColor: '#f1f1f1',\n    }),\n  };\n\n  let mapHeight = 650;\n  let className = '';\n  if (isSmall) {\n    mapHeight = 200;\n    className = 'layout-small';\n  } else if (isMedium) {\n    className = 'layout-medium';\n    mapHeight = 400;\n  }\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    if (!isAdvanceActive) {\n      if (keyword) {\n        history.push(`/pencarian?keyword=${keyword}`);\n        window.scroll(0,0);\n      }\n    } else {\n      const params = queryString.stringify(advancedFilter);\n      history.push(`/pencarian?${params}`);\n      window.scroll(0,0);\n    }\n  }\n\n  return (\n    <div className={className}>\n      <Header\n        logo={dataSettings.logo}\n        organization={dataSettings.organization}\n      />\n      <div className=\"home\">\n        <div className=\"banner\">\n          <Carousel images={dataBanner.images} />\n          <div className=\"banner__overlay\" />\n        </div>\n        <div className=\"home__search\">\n          <div className=\"container\">\n            <p className=\"home__search__intro\">{dataBanner.tagline}</p>\n            <div id=\"cari\" className={searchClassName}>\n              <a\n                href=\"#cari\"\n                className=\"search__advanced-link\"\n                onClick={() => {\n                  window.dispatchEvent(new Event('resize'));\n                  setAdvanceActive(!isAdvanceActive);\n                }}\n              >\n                <span className=\"icon-settings\" />\n              </a>\n              <span className=\"search__submit-wrapper\">\n                <a\n                  href=\"#submit-search\"\n                  className=\"search__submit\"\n                  onClick={(e) => handleSearchSubmit(e)}\n                >\n                  <span className=\"icon-magnifier\" />\n                </a>\n              </span>\n              <div className=\"search__select-wrapper\">\n                <div className=\"search__select-kategori\">\n                  <Select\n                    placeholder=\"Semua Kategori\"\n                    options={dataKategori || []}\n                    styles={selectColorStyles}\n                    onChange={(e) => {\n                      advancedFilter.kategori = e.value;\n                    }}\n                  />\n                </div>\n                <div className=\"search__select-walidata\">\n                  <Select\n                    placeholder=\"Semua Instansi\"\n                    options={dataInstansi || []}\n                    styles={selectColorStyles}\n                    onChange={(e) => {\n                      advancedFilter.instansi = e.value;\n                    }}\n                  />\n                </div>\n              </div>\n              <span className=\"search__input-wrapper\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Kata Kunci\"\n                  className=\"search__input\"\n                  value={keyword}\n                  onChange={e => {\n                    advancedFilter.keyword = e.target.value;\n                    setKeyword(e.target.value);\n                  }}\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                      handleSearchSubmit(e);\n                    }\n                  }}\n                />\n              </span>\n              <div className=\"search__map-wrapper\" style={{ height: isAdvanceActive ? mapHeight : 0}}>\n                <div className=\"search__map\">\n                  {map}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <DatasetTerbaru data={datasetTerbaru} />\n      <Kategori data={dataKategori} history={history} />\n      <Instansi\n        history={history}\n        data={dataInstansi}\n        isSmall={isSmall}\n        isMedium={isMedium}\n      />\n      <LinkCarousel\n        title=\"Web GIS\"\n        data={dataWeb}\n        isSmall={isSmall}\n        isMedium={isMedium}\n      />\n      <Berita\n        data={dataBerita}\n        clickHandler={(id) => history.push(`/berita/${id}`)}\n      />\n      <Footer dataSettings={dataSettings} />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { Map, TileLayer, ZoomControl } from 'react-leaflet';\nimport Header from '../../library/header';\nimport { useMedia } from '../../helpers/use-media';\nimport './index.css';\nimport { fetchSettings } from '../../helpers/fetchSettings';\n\nconst Jelajah = () => {\n  const [height, setHeight] = useState(window.innerHeight);\n  useEffect(() =>{\n    const handleResize = () => setHeight(window.innerHeight);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n  const dataSettings = fetchSettings();\n  const isSmall = useMedia(\"(max-width: 760px)\");\n  const isMedium = useMedia(\"(min-width: 760px) and (max-width : 1160px)\");\n  let className = '';\n  if (isSmall) {\n    className = 'layout-small';\n  } else if (isMedium) {\n    className = 'layout-medium';\n  }\n  return (\n    <div className={className}>\n      <Header\n        logo={dataSettings.logo}\n        organization={dataSettings.organization}\n      />\n      <div className=\"jelajah\" style={{ height }}>\n        <Map center={[ -6.175985, 106.827313 ]} zoom={12} zoomControl={false}>\n          <TileLayer\n            attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <ZoomControl position=\"topright\" />\n        </Map>\n      </div>\n    </div>\n  );\n};\n\nexport default Jelajah;\n","import React from 'react';\nimport Slider from \"react-slick\";\n\nimport './index.css';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst settings = {\n  dots: false,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  autoplaySpeed: 2000,\n  autoplay: true,\n};\nexport const Carousel = ({ images = []}) => {\n  return (\n    <div className=\"pencarian_carousel\">\n      <Slider {...settings}>\n      {images.map((image, index) => (\n        <div key={`carousel-${index}`}>\n          <div className=\"pencarian_carousel__image\" style={{ backgroundImage: 'url(\"' + image + '\")' }} />\n        </div>\n      ))}\n      </Slider>\n    </div>\n  );\n}\n\nexport default Carousel;\n","import React from 'react';\nimport queryString from 'query-string';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\n\nexport const Kategori = ({ data, filter, history }) => {\n  if (data === null) return (\n    <div>\n      <h4>Kategori</h4>\n      <div className=\"pencarian__loading\">\n        <PropagateLoader\n          sizeUnit={\"px\"}\n          size={10}\n          color={'#e87171'}\n          loading={true}\n        />\n      </div>\n    </div>\n  );\n  return (\n    <div>\n      <h4>Kategori</h4>\n      <ul>\n        {data.map((item) => {\n          let className;\n          let clickFilter = { ...filter };\n\n          if (filter.kategori) {\n            className = 'pencarian__filter-inactive';\n            if (Array.isArray(filter.kategori)) {\n              const kategoriFilterForClick = [];\n              filter.kategori.map((kat) => {\n                if (kat === item.label) {\n                  className = 'pencarian__filter-active';\n                } else {\n                  kategoriFilterForClick.push(kat);\n                }\n                return kat;\n              });\n              if (className === 'pencarian__filter-active') {\n                clickFilter.kategori = kategoriFilterForClick;\n              } else {\n                clickFilter.kategori = [\n                  ...clickFilter.kategori,\n                  item.label\n                ];\n              }\n            } else {\n              if (filter.kategori === item.label) {\n                className = 'pencarian__filter-active';\n                delete clickFilter.kategori;\n              } else {\n                clickFilter.kategori = [\n                  filter.kategori,\n                  item.label\n                ];\n              }\n            }\n          } else {\n            clickFilter.kategori = item.label;\n          }\n          const query = queryString.stringify(clickFilter)\n          return (\n            <li\n              key={item.label}\n              className={className}\n              onClick={() => {\n                history.push('/pencarian?' + query);\n              }}\n            >\n              <span className=\"pencarian__filter-item\">{item.label}</span>\n              <span className=\"pencarian__filter-count\">{item.count}</span>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Kategori;\n","import React from 'react';\nimport queryString from 'query-string';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\n\nexport const Instansi = ({ data, filter, history }) => {\n  if (data === null) return (\n    <div>\n      <h4>Instansi</h4>\n      <div className=\"pencarian__loading\">\n        <PropagateLoader\n          sizeUnit={\"px\"}\n          size={10}\n          color={'#e87171'}\n          loading={true}\n        />\n      </div>\n    </div>\n  );\n  return (\n    <div>\n      <h4>Instansi</h4>\n      <ul>\n        {data.map((item) => {\n          let className;\n          let clickFilter = { ...filter };\n\n          if (filter.instansi) {\n            className = 'pencarian__filter-inactive';\n            if (Array.isArray(filter.instansi)) {\n              const instansiFilterForClick = [];\n              filter.instansi.map((ins) => {\n                if (ins === item.label) {\n                  className = 'pencarian__filter-active';\n                } else {\n                  instansiFilterForClick.push(ins);\n                }\n                return ins;\n              });\n              if (className === 'pencarian__filter-active') {\n                clickFilter.instansi = instansiFilterForClick;\n              } else {\n                clickFilter.instansi = [\n                  ...clickFilter.instansi,\n                  item.label\n                ];\n              }\n            } else {\n              if (filter.instansi === item.label) {\n                className = 'pencarian__filter-active';\n                delete clickFilter.instansi;\n              } else {\n                clickFilter.instansi = [\n                  filter.instansi,\n                  item.label\n                ];\n              }\n            }\n          } else {\n            clickFilter.instansi = item.label;\n          }\n          const query = queryString.stringify(clickFilter)\n          return (\n            <li\n              key={item.label}\n              className={className}\n              onClick={() => {\n                history.push('/pencarian?' + query);\n              }}\n            >\n              <span className=\"pencarian__filter-item\">{item.label}</span>\n              <span className=\"pencarian__filter-count\">{item.count}</span>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Instansi;\n","import React from 'react';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport { Dataset } from '../../../../library/dataset'\n\nexport const ListDataset = ({ data }) => {\n  if (data === null) return (\n    <div>\n      <div className=\"pencarian__loading\">\n        <PropagateLoader\n          sizeUnit={\"px\"}\n          size={10}\n          color={'#e87171'}\n          loading={true}\n        />\n      </div>\n    </div>\n  );\n  if (data.length < 1) {\n    return (\n      <div className=\"pencarian__nodata\">Data tidak ditemukan.</div>\n    )\n  }\n  return (\n    <div>\n      {data.map((item) => {\n        return (\n          <div key={item.identifier} className=\"pencarian__dataset__list__item\">\n            <Dataset {...item} />\n          </div>\n        )\n      })}\n    </div>\n  );\n};\n\nexport default ListDataset;\n","let finalDataInstansi = null;\n\nexport const addCountInstansi = (dataInstansi, dataDataset) => {\n  if (finalDataInstansi) return finalDataInstansi;\n  if (dataDataset === null || dataInstansi === null) return null;\n  if (dataDataset === [] || dataInstansi === []) return dataInstansi;\n\n  let counts = {};\n  dataDataset.map((dataset) => {\n    const curInstansi = dataset.author;\n    if (curInstansi in counts) {\n      counts[curInstansi]++;\n    } else {\n      counts[curInstansi] = 1;\n    }\n    return dataset;\n  });\n  finalDataInstansi = dataInstansi.map((instansi) => {\n    return {\n      ...instansi,\n      count: counts[instansi.label]\n    };\n  });\n  return finalDataInstansi;\n};\n\nexport default addCountInstansi;\n","let finalDataKategori = null;\n\nexport const addCountKategori = (dataKategori, dataDataset) => {\n  if (finalDataKategori) return finalDataKategori;\n  if (dataDataset === null || dataKategori === null) return null;\n  if (dataDataset === [] || dataKategori === []) return dataKategori;\n\n  let counts = {};\n  dataDataset.map((dataset) => {\n    const curKategori = dataset.kategori;\n    if (curKategori in counts) {\n      counts[curKategori]++;\n    } else {\n      counts[curKategori] = 1;\n    }\n    return dataset;\n  });\n  finalDataKategori = dataKategori.map((kategori) => {\n    return {\n      ...kategori,\n      count: counts[kategori.label]\n    };\n  });\n  return finalDataKategori;\n};\n\nexport default addCountKategori;\n","import React from 'react';\nimport queryString from 'query-string';\n\nconst paginationPerPage = 12;\n\nexport const paginateDataset = ({\n  dataset,\n  page,\n}) => {\n  if (dataset === null) return null;\n  if (dataset.length < paginationPerPage) return dataset;\n\n  const startPage = (page - 1) * paginationPerPage;\n  return dataset.splice(startPage, paginationPerPage);\n};\n\nexport const Pagination = ({\n  datasetLength,\n  currentPage,\n  filter,\n  history\n}) => {\n  if (datasetLength - 1 < paginationPerPage) return null;\n\n  const startPage = (currentPage - 1) * paginationPerPage;\n  const endPage = startPage + paginationPerPage;\n\n  let paginateNext = null;\n  let paginatePrev = null;\n\n  if (endPage < datasetLength) {\n    const filterNext = {\n      ...filter,\n      page: parseInt(currentPage) + 1\n    };\n    paginateNext = (\n      <span\n        className=\"pagination__next\"\n        onClick={() => {\n          history.push('/pencarian?' + queryString.stringify(filterNext));\n          window.scroll(0,0);\n        }}\n      >\n        Selanjutnya <span className=\"icon-arrow-right\" />\n      </span>\n    );\n  }\n  if (currentPage > 1) {\n    const filterPrev = {\n      ...filter,\n      page: parseInt(currentPage) - 1\n    };\n    paginatePrev = (\n      <span\n        className=\"pagination__prev\"\n        onClick={() => {\n          history.push('/pencarian?' + queryString.stringify(filterPrev));\n          window.scroll(0,0);\n        }}\n      >\n        <span className=\"icon-arrow-left\" /> Sebelumnya\n      </span>\n    );\n  }\n\n  return (\n    <div className=\"pagination\">\n      {paginateNext}\n      {paginatePrev}\n    </div>\n  )\n};\n\nexport default Pagination;\n","import { latLngBounds } from 'leaflet';\n\nexport const filterDataset = ({\n  dataset,\n  filter,\n  mapBounds\n}) => {\n  if (dataset === null) return null;\n\n  return dataset.filter((item) => {\n    if (filter.kategori) {\n      if (Array.isArray(filter.kategori)) {\n        if (filter.kategori.indexOf(item.kategori) < 0) return false;\n      } else {\n        if (item.kategori !== filter.kategori) return false;\n      }\n    }\n    if (filter.instansi) {\n      if (Array.isArray(filter.instansi)) {\n        if (filter.instansi.indexOf(item.author) < 0) return false;\n      } else {\n        if (item.author !== filter.instansi) return false;\n      }\n    }\n    if (filter.keyword && !item.title.toLowerCase().includes(filter.keyword.toLowerCase())) return false;\n\n    if (filter.bounds) {\n      const curMapBounds = latLngBounds(mapBounds);\n      const itemBounds = latLngBounds(item.bbox);\n      return curMapBounds.intersects(itemBounds);\n    }\n\n    return true;\n  });\n};\n\nexport default filterDataset;\n\n","import React  from 'react';\nimport Header from '../../library/header';\nimport { Footer } from '../../library/footer';\nimport { useMedia } from '../../helpers/use-media';\nimport './index.scss';\nimport { fetchSettings } from '../../helpers/fetchSettings';\nimport { fetchBerita } from '../../helpers/fetchBerita';\n\nconst Berita = ({ match }) => {\n  const dataSettings = fetchSettings();\n  const dataBerita = fetchBerita();\n  const isSmall = useMedia(\"(max-width: 760px)\");\n  const isMedium = useMedia(\"(min-width: 760px) and (max-width : 1160px)\");\n\n  let className = '';\n  if (isSmall) {\n    className = 'layout-small';\n  } else if (isMedium) {\n    className = 'layout-medium';\n  }\n  if (dataBerita === null)  {\n    return (\n      <div>Loading...</div>\n    );\n  }\n  let detailBerita = {};\n  if (dataBerita) {\n    dataBerita.map((item) => {\n      if (parseInt(item.id) === parseInt(match.params.id)) {\n        detailBerita = item;\n      }\n      return item;\n    });\n  } else {\n    return (\n      <div>No Data.</div>\n    );\n  }\n  return (\n    <div className={className}>\n      <Header\n        logo={dataSettings.logo}\n        organization={dataSettings.organization}\n      />\n      <div className=\"detail-berita\">\n        <div className=\"container\">\n          <h5 className=\"detail-berita__date\">{detailBerita.date}</h5>\n          <h2 className=\"detail-berita__title\">{detailBerita.title}</h2>\n          <div dangerouslySetInnerHTML={{__html: detailBerita.full}} />\n        </div>\n      </div>\n      <Footer dataSettings={dataSettings} />\n    </div>\n  );\n};\n\nexport default Berita;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route  } from \"react-router-dom\";\nimport Home from './components/home';\nimport Jelajah from './components/jelajah';\nimport Pencarian from './components/pencarian';\nimport Berita from './components/berita';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/jelajah/\" component={Jelajah} />\n        <Route path=\"/pencarian/\" component={Pencarian} />\n        <Route path=\"/berita/:id\" component={Berita} />\n      </div>\n    </Router>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}